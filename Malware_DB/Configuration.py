import os
import sys


class Configuration:

    KEY_OS_TYPE = "OS_TYPE"
    KEY_IS_MALWARE = "IS_MALWARE"
    KEY_MALWARE_TYPE = "MALWARE_TYPE"
    KEY_DATA_SIZE = "DATA_SIZE"
    KEY_FEATURE_TYPE = "FEATURE_TYPE"

    def __init__(self, config_path):
        self.OS_TYPE = None
        self.IS_MALWARE = None
        self.MALWARE_TYPE = None
        self.DATA_SIZE = None
        self.FEATURE_TYPE = None

        self.set_config(config_path)
        self.print_info()

    def set_config(self, config_path):
        if os.path.exists(config_path) is False:
            print("[ERROR] Invalid configuration path")
            sys.exit(1)

        with open(config_path, 'r') as fd:
            lines = fd.readlines()

        self._parse(lines)

    def _parse(self, lines):
        for line in lines:
            line = line.strip()

            key = line.split('=')[0]
            value = line.split('=')[1]

            if key == Configuration.KEY_DATA_SIZE:
                self.DATA_SIZE = int(value)
            elif key == Configuration.KEY_FEATURE_TYPE:
                self.FEATURE_TYPE = value
            elif key == Configuration.KEY_IS_MALWARE:
                self.IS_MALWARE = self._get_boolean(value)
            elif key == Configuration.KEY_MALWARE_TYPE:
                self.MALWARE_TYPE = value
            elif key == Configuration.KEY_OS_TYPE:
                self.OS_TYPE = value
            else:
                print("[ERROR] Invalid config key : " + line)

    def print_info(self):
        print("")
        print("------------------------------------")
        print("Configuration")
        print("      OS_TYPE              : ", self.OS_TYPE)
        print("      FEATURE_TYPE            : ", self.FEATURE_TYPE)
        print("      IS_MALWARE         : ", self.IS_MALWARE)
        print("      MALWARE_TYPE     : ", self.MALWARE_TYPE)
        print("      DATA_SIZE     : ", self.DATA_SIZE)

    def _get_boolean(self, bool_str):
        bool_str = bool_str.lower()
        if bool_str == "true":
            return True

        return False

    def get_os_type(self):
        return self.OS_TYPE.upper()

    def get_feature_type(self):
        return self.FEATURE_TYPE.upper()

    def get_is_malware(self):
        return self.IS_MALWARE

    def get_malware_type(self):
        return self.MALWARE_TYPE.upper()

    def get_data_size(self):
        return self.DATA_SIZE